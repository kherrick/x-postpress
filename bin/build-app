#!/bin/bash -e

readonly PROJECT_ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/.."

cd "${PROJECT_ROOT}"

if [[ -z "$BASE_PATH" ]]; then
  readonly BASE_PATH='/'
fi

declare UUID
if [[ $(command -v uuidgen) ]]; then
  UUID="$(uuidgen)"
else
  UUID="$(date +'%s')"
fi

# update polymer.json to reflect a different basepath
cp ./polymer.json "./polymer.json.${UUID}"

sed -i.bak "s#\"basePath\": true,#\"basePath\": \"${BASE_PATH}\",#g" ./polymer.json

# update manifest.json to reflect a different basepath
cp ./manifest.json "./manifest.json.${UUID}"

sed -i.bak "s#\"start_url\": \"/\"#\"start_url\": \"${BASE_PATH}\"#g" ./manifest.json

# run the TypeScript compiler
npm run typescript

# run against the JavaScript produced by TypeScript
npm run lint-fix

# run polymer build with the new files
npx polymer build

# cleanup polymer.json file manipulations
mv "./polymer.json.${UUID}" ./polymer.json \
  && rm polymer.json.bak

# cleanup manifest.json file manipulations
mv "./manifest.json.${UUID}" ./manifest.json \
  && rm manifest.json.bak
