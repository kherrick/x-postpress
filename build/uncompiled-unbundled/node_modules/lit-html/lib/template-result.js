import{reparentNodes}from"./dom.js";import{boundAttributeSuffix,lastAttributeNameRegex,marker,nodeMarker}from"./template.js";export class TemplateResult{constructor(strings,values,type,processor){this.strings=strings;this.values=values;this.type=type;this.processor=processor}getHTML(){const endIndex=this.strings.length-1;let html="";for(let i=0;i<endIndex;i++){const s=this.strings[i];let addedMarker=!1;html+=s.replace(lastAttributeNameRegex,(_match,whitespace,name,value)=>{addedMarker=!0;return whitespace+name+boundAttributeSuffix+value+marker});if(!addedMarker){html+=nodeMarker}}return html+this.strings[endIndex]}getTemplateElement(){const template=document.createElement("template");template.innerHTML=this.getHTML();return template}}export class SVGTemplateResult extends TemplateResult{getHTML(){return`<svg>${super.getHTML()}</svg>`}getTemplateElement(){const template=super.getTemplateElement(),content=template.content,svgElement=content.firstChild;content.removeChild(svgElement);reparentNodes(content,svgElement.firstChild);return template}}